import{_ as s,o as a,c as n,d as l}from"./app.a4c01adc.js";const u=JSON.parse('{"title":"项目指令使用","description":"","frontmatter":{},"headers":[{"level":2,"title":"🚀运行项目","slug":"🚀运行项目","link":"#🚀运行项目","children":[]},{"level":2,"title":"🥂项目打包","slug":"🥂项目打包","link":"#🥂项目打包","children":[]},{"level":2,"title":"🐷模板生成","slug":"🐷模板生成","link":"#🐷模板生成","children":[]},{"level":2,"title":"⚓代码规范检查","slug":"⚓代码规范检查","link":"#⚓代码规范检查","children":[]}],"relativePath":"guide/sv3/command.md","lastUpdated":1699846681000}'),e={name:"guide/sv3/command.md"},p=l(`<h1 id="项目指令使用" tabindex="-1">项目指令使用 <a class="header-anchor" href="#项目指令使用" aria-hidden="true">#</a></h1><h2 id="🚀运行项目" tabindex="-1">🚀运行项目 <a class="header-anchor" href="#🚀运行项目" aria-hidden="true">#</a></h2><ul><li>默认在3000端口启动，如果端口被占用则向后沿用</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 本地运行项目</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">dev</span></span>
<span class="line"></span></code></pre></div><h2 id="🥂项目打包" tabindex="-1">🥂项目打包 <a class="header-anchor" href="#🥂项目打包" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 打包文件在 /dist 中生成</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"></span></code></pre></div><h2 id="🐷模板生成" tabindex="-1">🐷模板生成 <a class="header-anchor" href="#🐷模板生成" aria-hidden="true">#</a></h2><p>使用<code>plop</code>快速生成所需要的代码模板</p><ul><li>router 在<code>/src/router/modules</code>生成路由模板</li><li>page 在<code>/src/views</code>生成页面模板</li><li>store 在<code>/src/store/modules</code>生成pinia模板</li><li>mock 在<code>/mock</code>生成数据模拟模板</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 生成项目模板</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 有四种模板供选择</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">gen</span></span>
<span class="line"></span></code></pre></div><h2 id="⚓代码规范检查" tabindex="-1">⚓代码规范检查 <a class="header-anchor" href="#⚓代码规范检查" aria-hidden="true">#</a></h2><ul><li>项目配置 lint-stage 对提交的代码自动进行风格校验</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">lint:eslint</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">lint:prettier</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">lint:stylelint</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">lint:lint-stage</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 初始化 git 钩子</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">prepare</span></span>
<span class="line"></span></code></pre></div>`,13),o=[p];function t(c,i,r,d,h,y){return a(),n("div",null,o)}const E=s(e,[["render",t]]);export{u as __pageData,E as default};
